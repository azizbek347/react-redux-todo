{"version":3,"sources":["actions/action.js","components/Input/index.js","components/Input/Input.jsx","actions/actionCreators.js","components/ListElement/ListElement.jsx","components/ListElement/index.js","components/List/index.js","components/List/List.jsx","reducers/todoReducer.js","reducers/index.js","store/index.js","App.js","index.js"],"names":["ADD_TODO","EDIT_TODO","REMOVE_TODO","Input","connect","dispatch","addTodoItem","todo","type","payload","props","inputRef","useRef","className","Form","onSubmit","e","preventDefault","text","current","value","id","uuid","focus","Col","sm","md","lg","Control","placeholder","ref","required","Button","variant","ListElement","todoEl","removeTodoItem","editTodoItem","removeHandler","editHandler","innerText","console","log","html","innerRef","disabled","onBlur","spellcheck","onClick","List","state","fn","map","todoReducer","action","newState","filter","el","forEach","rootReducer","combineReducers","store","createStore","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9ff66df.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const REMOVE_TODO = 'REMOVE_TODO';","import Input from \"./Input\";\r\nexport default Input;","import './style.css';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addTodo } from '../../actions/actionCreators';\r\nimport { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst Input = (props) => {\r\n    const inputRef = useRef();\r\n    const { addTodoItem } = props;\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { current: { value: text } } = inputRef;\r\n        const todo = { id: uuid(), text };\r\n        addTodoItem(todo);\r\n        inputRef.current.value = '';\r\n        inputRef.current.focus();\r\n    }\r\n    return (\r\n        <div>\r\n            <h5 className=\"px-3 mb-3\">Добавить :</h5>\r\n            <Form className=\"d-flex flex-wrap\" onSubmit={handleSubmit}>\r\n                <Col sm=\"12\" md=\"9\" lg=\"10\">\r\n                    <Form.Control type=\"text\" placeholder=\"Добавить\" ref={ref => inputRef.current = ref} required/>\r\n                </Col>\r\n                <Col sm=\"12\" md=\"3\" lg=\"2\" className=\"mt-3 mt-md-0\">\r\n                    <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n                        Добавить\r\n                    </Button>\r\n                </Col>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addTodoItem: (todo) => dispatch(addTodo(todo))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Input);","import {\r\n    ADD_TODO,\r\n    EDIT_TODO,\r\n    REMOVE_TODO\r\n} from \"./index\";\r\n\r\n\r\nexport const addTodo = (payload) => ({\r\n    type: ADD_TODO,\r\n    payload\r\n});\r\n\r\nexport const editTodo = (payload)=>({\r\n    type:EDIT_TODO,\r\n    payload\r\n});\r\n\r\nexport const removeTodo = (id)=>({\r\n    type: REMOVE_TODO,\r\n    id\r\n});","import './style.css';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useRef } from 'react';\r\n\r\nconst ListElement = (props = {}) => {\r\n    const { todoEl, removeTodoItem, editTodoItem } = props;\r\n    const { id, text } = todoEl;\r\n    const inputRef = useRef();\r\n    const removeHandler = () => removeTodoItem(id);\r\n    const editHandler = () => {\r\n        const { current: { innerText: text } } = inputRef;\r\n        const newTodo = { id, text }\r\n        editTodoItem(newTodo);\r\n    }\r\n    console.log(props);\r\n    return <li className='list-group-item my-list-item d-flex justify-content-between align-items-center'>\r\n        <ContentEditable html={text} innerRef={ref => inputRef.current = ref} disabled={false} onBlur={editHandler} className='editable-item' spellcheck=\"false\"/>\r\n        <Button variant='dark' onClick={removeHandler}>Удалить</Button>\r\n    </li>\r\n}\r\n\r\nexport default ListElement;\r\n","import ListElement from './ListElement';\r\nexport default ListElement;","import List from \"./List\";\r\nexport default List;","import './style.css';\r\nimport ListElement from '../ListElement';\r\nimport { connect } from 'react-redux';\r\nimport { editTodo, removeTodo } from '../../actions/actionCreators';\r\n\r\nconst List = (props) => {\r\n    const { todo = [], editTodoItem, removeTodoItem } = props;\r\n    const fn = { editTodoItem, removeTodoItem };\r\n    return <ul className=\"list-group px-3 mt-3 flex-grow-1 overflow-auto\">\r\n        {todo.map(todoEl => <ListElement todoEl={todoEl} key={todoEl.id} {...fn}></ListElement>)}\r\n    </ul>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    todo: state.todo\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    editTodoItem: (todo) => dispatch(editTodo(todo)),\r\n    removeTodoItem: (todo) => dispatch(removeTodo(todo))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","import {\r\n    ADD_TODO,\r\n    EDIT_TODO,\r\n    REMOVE_TODO\r\n} from '../actions';\r\nconst todoReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case ADD_TODO:{\r\n            const newState = [...state,action.payload];\r\n            return newState;\r\n        }\r\n        case REMOVE_TODO:{\r\n            const {id}=action;\r\n            const newState = state.filter(el=>el.id!==id);\r\n            return newState;\r\n        }\r\n        case EDIT_TODO:{\r\n            const {payload:{id,text}}=action;\r\n            const newState = [...state];\r\n            newState.forEach(el=>el.id===id ? el.text = text : \"\");\r\n            return newState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default todoReducer;","import {combineReducers} from 'redux';\r\nimport todoReducer from './todoReducer';\r\nconst rootReducer = combineReducers({\r\n    todo: todoReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from './../reducers';\r\n\r\nconst store = createStore(rootReducer);\r\nexport default store;","import './App.css';\nimport Input from './components/Input';\nimport List from './components/List/';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <div className=\"container d-flex flex-column overflow-hidden vh-100 py-5\">\n          <Input />\n          <List />\n        </div>\n      </div>\n     </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport {render} from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nrender(<App />,document.getElementById('root'));\n"],"sourceRoot":""}